package com.namazustudios.socialengine.rt;

import com.namazustudios.socialengine.exception.NotFoundException;

/**
 * Represents the currently connected clients and provides a means to
 * dispatch messages to clients.
 *
 * Created by patricktwohig on 7/26/15.
 */
public interface ConnectedClientService {

    /**
     * Gets the {@link ResponseReceiver} instance which can be used to receive messages
     * of the given type.
     *
     * @param client the client
     * @param request the request
     * @return the {@link ResponseReceiver} which will receive the response
     *
     * @throws {@link NotFoundException} if no active connection for the client can be found
     */
    ResponseReceiver getResponseReceiver(Client client, Request request);

    /**
     * Gets the {@link ResponseReceiver} instance which can be used to receive events
     * of the given type.
     *
     * @param client the client
     *
     * @return the {@link ResponseReceiver} instance which will event
     * @throws {@link NotFoundException} if no active connection for the client can be found
     */
    EventReceiver getEventReceiver(final Client client);

    /**
     * A type used to receive the objects generated by requests.
     */
    interface ResponseReceiver {

        /**
         * After generating the desired type of header and payload,
         * the method will pass both types in to be delivered to the
         * client.
         *
         * @Param code
         * @param payload
         */
        void receive(ResponseCode code, Object payload);

    }

    /**
     * A type used to receive the objects genrated by events.
     */
    interface EventReceiver {

        void receive(Object payload);

    }

}
